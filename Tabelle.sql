CREATE TABLE CLIENTE(
CODICE_FISCALE CHAR(16) PRIMARY KEY,
NOME VARCHAR2(200) NOT NULL,
COGNOME VARCHAR2(200) NOT NULL,
EMAIL VARCHAR2(200) NOT NULL UNIQUE,
ABBONAMENTO NUMBER(1) NOT NULL,
TELEFONO VARCHAR2(20) NOT NULL,
CONSTRAINT CHECK_TELEFONO CHECK (REGEXP_LIKE(TELEFONO, '^[0-9]+$')),
CONSTRAINT CHECK_ABBONAMENTO CHECK(ABBONAMENTO = 0 OR ABBONAMENTO = 1),
CONSTRAINT CHECK_EMAIL CHECK (EMAIL LIKE '%@%.%' AND EMAIL NOT LIKE '@%' AND EMAIL NOT LIKE '%@%@%')
);

CREATE TABLE METODO_DI_PAGAMENTO(
CODICE_IDENTIFICATIVO VARCHAR2(31) PRIMARY KEY,
CCV VARCHAR2(4) NOT NULL,
DATA_SCADENZA VARCHAR2(7) NOT NULL,
TIPO_CARTA VARCHAR2(30) NOT NULL,
TIPO_CIRCUITO VARCHAR2(20) NOT NULL,
CODICE_FISCALE_MDP CHAR(16) NOT NULL,
CONSTRAINT FK_CODICE_FISCALE_MDP FOREIGN KEY(CODICE_FISCALE_MDP) REFERENCES CLIENTE(CODICE_FISCALE),
CONSTRAINT CHECK_CODICE CHECK (REGEXP_LIKE(CODICE_IDENTIFICATIVO, '^[0-9]+$')),
CONSTRAINT CHECK_CCV CHECK (REGEXP_LIKE(CCV, '^[0-9]+$')),
CONSTRAINT CHECK_CARTA CHECK(TIPO_CARTA='CARTA DI CREDITO' OR TIPO_CARTA='CARTA PREPAGATA'),
CONSTRAINT CHECK_CIRCUITO CHECK(TIPO_CIRCUITO='VISA' OR TIPO_CIRCUITO='MASTERCARD' OR TIPO_CIRCUITO='AMERICAN EXPRESS')
); 

CREATE TABLE AUTORE(
PARTITA_IVA_AUTORE VARCHAR2(12) PRIMARY KEY,
NOME_AUTORE VARCHAR2(60) NOT NULL,
COGNOME_AUTORE VARCHAR2(60) NOT NULL
);

CREATE TABLE PROMOZIONE(
CODICE_PROMOZIONE VARCHAR2(20) PRIMARY KEY,
NOME_PROMOZIONE VARCHAR2(20) NOT NULL,
VALORE_PROMOZIONE NUMBER NOT NULL,
DATA_INIZIO_PROMOZIONE DATE NOT NULL,
DATA_FINE_PROMOZIONE DATE NOT NULL
);

CREATE TABLE ACQUISTO(
N_ACQUISTO NUMBER PRIMARY KEY,
CODICE_FISCALE_ACQUISTO CHAR(16) NOT NULL,
CONSTRAINT FK_CLIENTE_ACQUISTO FOREIGN KEY(CODICE_FISCALE_ACQUISTO) REFERENCES CLIENTE(CODICE_FISCALE),
CODICE_IDENTIFICATIVO_ACQUISTO VARCHAR(31) NOT NULL,
CONSTRAINT FK_MDP_ACQUISTO FOREIGN KEY(CODICE_IDENTIFICATIVO_ACQUISTO) REFERENCES METODO_DI_PAGAMENTO(CODICE_IDENTIFICATIVO),
CODICE_PROMOZIONE_ACQUISTO VARCHAR(20),
CONSTRAINT FK_CODICE_PROMOZIONE FOREIGN KEY(CODICE_PROMOZIONE_ACQUISTO) REFERENCES PROMOZIONE(CODICE_PROMOZIONE) 
);

CREATE TABLE STATO_ACQUISTO(
DATA_ACQUISTO DATE NOT NULL,
STATO_ACQUISTO VARCHAR2(15) NOT NULL,
N_ACQUISTO_STATO_ACQUISTO NUMBER NOT NULL,
CONSTRAINT PK_STATO_ACQUISTO PRIMARY KEY(DATA_ACQUISTO, N_ACQUISTO_STATO_ACQUISTO),
CONSTRAINT FK_ACQUISTO_STATO_ACQUISTO FOREIGN KEY(N_ACQUISTO_STATO_ACQUISTO) REFERENCES ACQUISTO(N_ACQUISTO),
CONSTRAINT CHECK_STATO_A CHECK(STATO_ACQUISTO='CONFERMATO' OR STATO_ACQUISTO='RESPINTO' OR STATO_ACQUISTO='IN ELABORAZIONE' OR STATO_ACQUISTO='CANCELLATO')
);

CREATE TABLE SOCIETA(
PARTITA_IVA_SOCIETA VARCHAR2(12) PRIMARY KEY,
NOME_SOCIETA VARCHAR2(50) NOT NULL,
TIPO_SOCIETA CHAR(17) NOT NULL,
CONSTRAINT CHECK_TIPO_S CHECK(TIPO_SOCIETA='CASA DISCOGRAFICA' OR TIPO_SOCIETA='CASA EDITRICE' OR TIPO_SOCIETA='GUITART')
);

CREATE TABLE PRODOTTO(
ID_PRODOTTO NUMBER PRIMARY KEY,
NOME_PRODOTTO VARCHAR2(200) NOT NULL,
PREZZO NUMBER NOT NULL,
QUANTITA_DISPONIBILE NUMBER NOT NULL,
TIPOLOGIA_PRODOTTO VARCHAR2(11) NOT NULL,
TIPO_PRODOTTO VARCHAR2(8) NOT NULL,
DATA_PUBBLICAZIONE DATE NOT NULL,
PARTITA_IVA_PRODOTTO_SOCIETA VARCHAR2(12) NOT NULL,
PARTITA_IVA_PRODOTTO_AUTORE VARCHAR(12) NOT NULL,
CONSTRAINT FK_PARTITA_IVA_PRODOTTO_SOCIETA FOREIGN KEY(PARTITA_IVA_PRODOTTO_SOCIETA) REFERENCES SOCIETA(PARTITA_IVA_SOCIETA),
CONSTRAINT FK_PARTITA_IVA_PRODOTTO_AUTORE FOREIGN KEY(PARTITA_IVA_PRODOTTO_AUTORE) REFERENCES AUTORE(PARTITA_IVA_AUTORE),
CONSTRAINT CHECK_TIPOLOGIA_PRODOTTO CHECK(TIPOLOGIA_PRODOTTO='MAGAZINE' OR TIPOLOGIA_PRODOTTO='MONOGRAFIA' OR TIPOLOGIA_PRODOTTO='ABBONAMENTO' OR TIPOLOGIA_PRODOTTO='E-BOOK' OR TIPOLOGIA_PRODOTTO='CD'),
CONSTRAINT CHECK_TIPO_PROOTTO CHECK(TIPO_PRODOTTO='FISICO' OR TIPO_PRODOTTO='DIGITALE')
);

CREATE TABLE INDIRIZZO(
ID_INDIRIZZO NUMBER PRIMARY KEY,
QUALIFICATORE VARCHAR2(30) NOT NULL,
STRADA VARCHAR2(50) NOT NULL,
NUMERO VARCHAR2(5) NOT NULL,
CITTA VARCHAR2(58) NOT NULL,
PROVINCIA VARCHAR2(20) NOT NULL,
CAP VARCHAR2(10) NOT NULL,
STATO_EUROPEO CHAR(2) NOT NULL,
CODICE_FISCALE_INDIRIZZO CHAR(16) NOT NULL,
CONSTRAINT FK_CODICE_FISCALE_I FOREIGN KEY(CODICE_FISCALE_INDIRIZZO) REFERENCES CLIENTE(CODICE_FISCALE),
CONSTRAINT CHECK_STATO_EUROPEO CHECK(STATO_EUROPEO='IT' OR STATO_EUROPEO='BE' OR STATO_EUROPEO='FR' OR STATO_EUROPEO='DE' OR STATO_EUROPEO='LU' OR STATO_EUROPEO='NL' OR STATO_EUROPEO='DK' OR STATO_EUROPEO='IE' OR STATO_EUROPEO='GB' OR STATO_EUROPEO='EL' OR STATO_EUROPEO='PT' OR STATO_EUROPEO='ES' OR STATO_EUROPEO='AT' OR STATO_EUROPEO='FI' OR STATO_EUROPEO='SE' OR STATO_EUROPEO='CY' OR STATO_EUROPEO='EE' OR STATO_EUROPEO='LV' OR STATO_EUROPEO='LT' OR STATO_EUROPEO='MT' OR STATO_EUROPEO='PL' OR STATO_EUROPEO='CZ' OR STATO_EUROPEO='SK' OR STATO_EUROPEO='SI' OR STATO_EUROPEO='HU' OR STATO_EUROPEO='BG' OR STATO_EUROPEO='RO' OR STATO_EUROPEO='CH' OR STATO_EUROPEO='IS' OR STATO_EUROPEO='LI' OR STATO_EUROPEO='NO' OR STATO_EUROPEO='HR')
);

CREATE TABLE SPEDIZIONE(
N_SPEDIZIONE NUMBER PRIMARY KEY,
DATA_CREAZIONE_SPEDIZIONE DATE NOT NULL,
INDIRIZZO_SPEDIZIONE NUMBER NOT NULL,
N_ACQUISTO_SPEDIZIONE NUMBER UNIQUE NOT NULL,
CONSTRAINT FK_INDIRIZZO_SPEDIZIONE FOREIGN KEY(INDIRIZZO_SPEDIZIONE) REFERENCES INDIRIZZO(ID_INDIRIZZO),
CONSTRAINT FK_N_ACQUISTO_SPEDIZIONE FOREIGN KEY(N_ACQUISTO_SPEDIZIONE) REFERENCES ACQUISTO(N_ACQUISTO)
);

CREATE TABLE STATO_SPEDIZIONE(
DATA_STATO_SPEDIZIONE DATE NOT NULL,
STATO_SPEDIZIONE VARCHAR2(24) NOT NULL,
N_SPEDIZIONE_STATO_SPEDIZIONE NUMBER NOT NULL,
CONSTRAINT PK_STATO_SPEDIZIONE PRIMARY KEY(DATA_STATO_SPEDIZIONE, N_SPEDIZIONE_STATO_SPEDIZIONE),
CONSTRAINT FK_N_SPEDIZIONE_STATO_SPEDIZIONE FOREIGN KEY(N_SPEDIZIONE_STATO_SPEDIZIONE) REFERENCES SPEDIZIONE(N_SPEDIZIONE),
CONSTRAINT CHECK_STATO_SPEDIZIONE CHECK(STATO_SPEDIZIONE='IN ELABORAZIONE' OR STATO_SPEDIZIONE='IN ATTESA' OR STATO_SPEDIZIONE='PRONTO PER LA SPEDIZIONE' OR STATO_SPEDIZIONE='SPEDITO' OR STATO_SPEDIZIONE='IN TRANSITO' OR STATO_SPEDIZIONE='IN CONSEGNA' OR STATO_SPEDIZIONE='RESTITUITO' OR STATO_SPEDIZIONE='RESPINTO' OR STATO_SPEDIZIONE='CONSEGNATO' OR STATO_SPEDIZIONE='CANCELLATO')
);

CREATE TABLE ABBONAMENTO(
CODICE_ABBONAMENTO VARCHAR2(10) PRIMARY KEY,
NOME_ABBONAMENTO VARCHAR2(15) NOT NULL,
DATA_INIZIO_ABBONAMENTO DATE NOT NULL,
DATA_FINE_ABBONAMENTO DATE NOT NULL,
CONSTRAINT CHECK_DATA CHECK (DATA_INIZIO_ABBONAMENTO < DATA_FINE_ABBONAMENTO)
);

CREATE TABLE CONTIENE(
QUANTITA NUMBER NOT NULL,
N_ACQUISTO_CONTIENE NUMBER NOT NULL,
ID_PRODOTTO_CONTIENE NUMBER NOT NULL,
CONSTRAINT PK_CONTIENE PRIMARY KEY(N_ACQUISTO_CONTIENE, ID_PRODOTTO_CONTIENE),
CONSTRAINT FK_ACQUISTO_CONTIENE FOREIGN KEY(N_ACQUISTO_CONTIENE) REFERENCES ACQUISTO(N_ACQUISTO),
CONSTRAINT FK_PRODOTTO_CONTIENE FOREIGN KEY(ID_PRODOTTO_CONTIENE) REFERENCES PRODOTTO(ID_PRODOTTO) 
);

CREATE TABLE POSSIEDE(
CODICE_ABBONAMENTO_POSSIEDE VARCHAR2(10) NOT NULL,
CODICE_FISCALE_POSSIEDE CHAR(16) NOT NULL,
CONSTRAINT PK_POSSIEDE PRIMARY KEY(CODICE_ABBONAMENTO_POSSIEDE, CODICE_FISCALE_POSSIEDE),
CONSTRAINT FK_ABBONAMENTO_POSSIEDE FOREIGN KEY(CODICE_ABBONAMENTO_POSSIEDE) REFERENCES ABBONAMENTO(CODICE_ABBONAMENTO),
CONSTRAINT FK_CLIENTE_POSSIEDE FOREIGN KEY(CODICE_FISCALE_POSSIEDE) REFERENCES CLIENTE(CODICE_FISCALE)
);

CREATE TABLE COSTITUITO(
CODICE_ABBONAMENTO_COSTITUITO VARCHAR2(10) NOT NULL,
ID_PRODOTTO_COSTITUITO NUMBER NOT NULL,
CONSTRAINT PK_COSTITUITO PRIMARY KEY(CODICE_ABBONAMENTO_COSTITUITO, ID_PRODOTTO_COSTITUITO),
CONSTRAINT FK_ABBONAMENTO_COSTITUITO FOREIGN KEY(CODICE_ABBONAMENTO_COSTITUITO) REFERENCES ABBONAMENTO(CODICE_ABBONAMENTO),
CONSTRAINT FK_PRODOTTO_COSTITUITO FOREIGN KEY(ID_PRODOTTO_COSTITUITO) REFERENCES PRODOTTO(ID_PRODOTTO)
);